using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

//I put this on an Empty GameObject called ScoreBoardManager.
//In Display Scores I put OnlineHighscores(Text).

public class SubmitAndLoadScores : MonoBehaviour
{
    private string secretKey = ""; // Edit this value
                                                //  and make sure it's the same as the one stored on addscore.
                                                //php
    string addScoreURL = "http://splat.coolpage.biz/scores/addscore.php?";
    //be sure to add a ? to your url
    string highScoreslistURL = "http://splater.coolpage.biz/scores/display.php";
    public Text displayScores; //Reference "Loading Scores..." text
                               //  component of that GameObject in our scene
    int highScore;
    string playerUsername;

    void Start()
    {
        LoadScoresAndNamesFromDatabase(); //loads scoreboard and
                                          //  displays it ingame

    }
    public string Md5Sum(string strToEncrypt)
    {
        System.Text.UTF8Encoding ue = new System.Text.UTF8Encoding();
        byte[] bytes = ue.GetBytes(strToEncrypt);
        // encrypt bytes
        System.Security.Cryptography.MD5CryptoServiceProvider md5 = new System.Security.Cryptography.MD5CryptoServiceProvider();
        byte[] hashBytes = md5.ComputeHash(bytes);
        // Convert the encrypted bytes back to a string (base 16)
        string hashString = "";
        for (int i = 0; i < hashBytes.Length; i++)
        {
            hashString += System.Convert.ToString(hashBytes[i], 16).PadLeft(2, '0');
        }

        return hashString.PadLeft(32, '0');
    } // Hashes/encrypts the username and score using the secretKey
      //for transmission over the web to
      // our php file http://splater.coolpage.biz/scores/addscore.php

    public void LoadScoresAndNamesFromDatabase()
    {
        StartCoroutine(FetchScoresAndNamesFromDatabase());
    }
    // Fetches the scores and names from the Database
    public void SubmitScoreAndNameToOnlineDatabase()
    //loads when user pushes enter(On End Edit (String)) after typing in name
    {
      highScore = Enemy.score; // fetches the score
       playerUsername = NameGetterScene0.playerName; // fetches the    playername
        StartCoroutine(PostScores(playerUsername, highScore)); //    post them online
    }
    // Post current score and name to the Database
    IEnumerator PostScores(string name, int score) // used to post scores online
    {
        { // This connects to a server side php script that will add  the name and score to a MySQL DB.
          // Supply it with a string representing the players name and the players score.
            string hash = Md5Sum(name + score + secretKey);
            string post_url = addScoreURL + "name=" + WWW.EscapeURL(
            name) + "&score=" + score + "&hash=" + hash;
            Debug.Log(post_url);
            // Post the URL to the site and create a download object to    get the result.

            WWW hs_post = new WWW(post_url);
            yield return hs_post;
            // Wait until the download is done   
            if (hs_post.error != null)
            { Debug.Log("There was an error posting the high score: " + hs_post.error); }


            else
            {
                Debug.Log("possible score upload sucess, reloading scoreboard");

                StartCoroutine(FetchScoresAndNamesFromDatabase());
                //        If score upload was successful update local        highscoreboard so the user can see
            }
        }
    }

    // Get the scores from the MySQL DB to display in a GUIText.
    IEnumerator FetchScoresAndNamesFromDatabase()
    {
        WWW hs_get = new WWW(highScoreslistURL);
        yield return hs_get;
        if (hs_get.error != null)
        { Debug.Log("There was an error getting the high score names: " + hs_get.error); }
        else
        {
            displayScores.text = hs_get.text; // this is a GUIText
                                              //  that will display the scores in game.
        }
    }
}
